import org.aspectjml.ajmlrac.runtime.*;
public privileged aspect AspectJMLRac$JMLRacPost4Project {

/** Generated by AspectJML to enable modular signals_only checking (XCS enabled) */
  after(final battleship.Destroyer object$rac): (execution( * battleship.Destroyer..*+.*(..))
          || execution(battleship.Destroyer..*+.new(..))
          || execution( * battleship.Destroyer+.*(..))
          || execution(battleship.Destroyer+.new(..))) && 
   this(object$rac) {
   JMLChecker.hasAnyThrownExceptionalPostconditionSignalsOnly();
  }

/** Generated by AspectJML to enhance error reporting (Execution Site enabled) */
  after() throwing (Throwable rac$e): (execution( * battleship.Destroyer..*+.*(..))
          || execution(battleship.Destroyer..*+.new(..))
          || execution( * battleship.Destroyer+.*(..))
          || execution(battleship.Destroyer+.new(..))){
    JMLChecker.hideAjmlSpecificStackTrace(rac$e);
    JMLChecker.rethrowJMLAssertionError(rac$e);
  }

/** Generated by AspectJML to enable modular signals_only checking (XCS enabled) */
  after(final battleship.Principal object$rac): (execution( * battleship.Principal..*+.*(..))
          || execution(battleship.Principal..*+.new(..))
          || execution( * battleship.Principal+.*(..))
          || execution(battleship.Principal+.new(..))) && 
   this(object$rac) {
   JMLChecker.hasAnyThrownExceptionalPostconditionSignalsOnly();
  }

/** Generated by AspectJML to enhance error reporting (Execution Site enabled) */
  after() throwing (Throwable rac$e): (execution( * battleship.Principal..*+.*(..))
          || execution(battleship.Principal..*+.new(..))
          || execution( * battleship.Principal+.*(..))
          || execution(battleship.Principal+.new(..))){
    JMLChecker.hideAjmlSpecificStackTrace(rac$e);
    JMLChecker.rethrowJMLAssertionError(rac$e);
  }

}